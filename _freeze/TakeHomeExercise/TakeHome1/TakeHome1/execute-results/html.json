{
  "hash": "e645c5fdc0b1051d5a71251c216d5f2b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 1\"\nauthor: \"Joshua TING\"\ndate: \"2 September, 2024\"\ndate-modified: \"last-modified\"\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Code Chunk\"\n    number-sections: true\nexecute:\n  eval: true #r will run through all codes\n  echo: true #r will display all code chunk\n  warning: false #for mark down\n  freeze: true #r will not render all existing  html files\n  message: false #avoid printing warning message\neditor: source\n---\n\n\n# Take-Home Exercise 1: Geospatial Analytics for Public Good\n\n## **Setting the Scene**\n\nAccording to World Health Organisation (WHO), road traffic accidents cause the death of approximately 1.19 million people each year leave between 20 and 50 million people with non-fatal injuries. More than half of all road traffic deaths occur among vulnerable road users, such as pedestrians, cyclists and motorcyclists.\n\nRoad traffic injuries are the leading cause of death for children and young adults aged 5–29. Yet two thirds of road traffic fatalities occur among people of working age (18–59 years). Nine in 10 fatalities on the roads occur in low- and middle-income countries, even though these countries have around 60% of the world’s vehicles.\n\nIn addition to the human suffering caused by road traffic injuries, they also incur a heavy economic burden on victims and their families, both through treatment costs for the injured and through loss of productivity of those killed or disabled. More broadly, road traffic injuries have a serious impact on national economies, costing countries 3% of their annual gross domestic product.\n\nThailand’s roads are the deadliest in Southeast Asia and among the worst in the world, according to the World Health Organisation. About 20,000 people die in road accidents each year, or about 56 deaths a day (WHO).\n\nBetween 2014 and 2021, Thailand experienced a notable increase in accident frequencies. Specifically, 19% of all accidents in Thailand occurred on the national highways, which constituted the primary public thoroughfares connecting various regions, provinces, districts, and significant locations within a comprehensive network. Within the broader context of accidents across the country, there existed a considerable 66% likelihood of encountering accident-prone zones, often termed ‘black spots,’ distributed as follows: 66% on straight road segments, 13% at curves, 6% at median points of cross-shaped intersections, 5% at T-shaped intersections and Y-shaped intersections, 3% at cross-shaped intersections, 2% on bridges, and 2% on steep slopes, respectively.\n\n## **Objectives**\n\nBy and large, road traffic accidents can be attributed by two major factors, namely: behavioural and environmental factors. Behavioural factors in driving are considered to be major causes of traffic accidents either in direct or indirect manner (Lewin, 1982). These factors can be further grouped into two as, driver behavior (also called driver/driving style) and driver performance, in other words, driver/driving skills (Elander, West, & French, 1993). Environmental factors, on the other hand, includes but not limited to weather condition such as poor visibility during heavy rain or foggy and road conditions such as sharp bend road, slippery slope road, and [blind spot](https://en.wikipedia.org/wiki/Vehicle_blind_spot).\n\nPrevious studies have demonstrated the significant potential of Spatial Point Patterns Analysis (SPPA) in exploring and identifying factors influencing road traffic accidents. However, these studies often focus solely on either behavioral or environmental factors, with limited consideration of temporal factors such as season, day of the week, or time of day.\n\nIn view of this, you are tasked to discover factors affecting road traffic accidents in the [Bangkok Metropolitan Region BMR](https://en.wikipedia.org/wiki/Bangkok_Metropolitan_Region) by employing both spatial spatio-temporal point patterns analysis methods.\n\nThe specific objectives of this take-home exercise are as follows:\n\n-   To visualize the spatio-temporal dynamics of road traffic accidents in BMR using appropriate statistical graphics and geovisualization methods.\n\n-   To conduct detailed spatial analysis of road traffic accidents using appropriate Network Spatial Point Patterns Analysis methods.\n\n-   To conduct detailed spatio-temporal analysis of road traffic accidents using appropriate Temporal Network Spatial Point Patterns Analysis methods.\n\n## **Data Preparation**\n\nFor the purpose of this exercise, three basic data sets must be used:\n\n-   [Thailand Road Accident \\[2019-2022\\]](https://www.kaggle.com/datasets/thaweewatboy/thailand-road-accident-2019-2022) on Kaggle\n\n-   [Thailand Roads (OpenStreetMap Export)](https://data.humdata.org/dataset/hotosm_tha_roads) on HDX.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) on HDX.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, spatstat, ggplot2, ggmap, tmap, dplyr, lubridate, raster)\n```\n:::\n\n\n| Packages                                                                            | Function                                                                        |\n|-------------------------------------|-----------------------------------|\n| [**sf**](https://r-spatial.github.io/sf/)                                           | To import, manage, and hande geospatial data                                    |\n| [**tidyverse**](https://www.tidyverse.org/)                                         | For non-spatial data wrangling                                                  |\n| [**sfdep**](https://sfdep.josiahparry.com/)                                         | To compute spatial weights, global and local spatial autocorrelation statistics |\n| [spatstat](https://spatstat.org/)                                                   | For analysing spatial points                                                    |\n| [ggplot2](https://ggplot2.tidyverse.org/)                                           | For data divisualisation                                                        |\n| [ggmap](https://cran.r-project.org/web/packages/ggmap/readme/README.html)           | Retrieve raster map tiles from online mapping services                          |\n| [tmap](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html) | Creating thematic maps                                                          |\n| [lubridate](https://lubridate.tidyverse.org/)                                       | For robust date-time usage                                                      |\n| [**leaflet**](https://rstudio.github.io/leaflet/)                                   | For interactive maps                                                            |\n| [**knitr**](https://cran.r-project.org/web/packages/knitr/)                         | For dynamic report generation                                                   |\n| raster                                                                              |                                                                                 |\n\n: Packages\n\n::: panel-tabset\n## Road Traffic Accidents (RTA)\n\n**Thailand Road Traffic Accident Data \\[2019-2022\\]** (from Kaggle): This contains the road accident records, including spatial (longitude/latitude) and temporal information (date and time).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrta_sf <- read_csv(\"data/aspatial/archive/thai_road_accident_2019_2022.csv\") %>%\n  filter(!is.na(longitude) & longitude !='',\n        !is.na(latitude) & latitude != '') %>%\n  st_as_sf(coords = c(\"longitude\", 'latitude'),\n           crs=4326) %>% #WGS 84 - USE BY ALL GPS\n  st_transform(crs=32647) %>% #EPSG \n  mutate(Month_num = month(incident_datetime)) %>%\n  mutate(Month_fac = month(incident_datetime, #fac is factor\n                       label = TRUE, \n                       abbr = TRUE)) %>% #CAN CHANGE TO MON TUES \n  mutate(dayofweek = day(incident_datetime))\n#PROJECTED PCS UTM IS 326, 47 NORTH \n```\n:::\n\n\nSaving this geometry with corrected projection for plotting use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(rta_sf, \"data/rds/rta_sf.rds\")\n```\n:::\n\n\n## Road Network\n\n-   **Thailand Roads (OpenStreetMap Export)** (from HDX): This will provide the road network to conduct network-based analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroadlines <- st_read(dsn = \"data/geospatial/roadlines/\",\n                      layer = \"hotosm_tha_roads_lines_shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `hotosm_tha_roads_lines_shp' from data source \n  `/Users/joshuatingsiyuan14/Desktop/isaiahting/ISSS626_GAA/TakeHomeExercise/TakeHome1/data/geospatial/roadlines' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2792590 features and 14 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nCRS:           NA\n```\n\n\n:::\n:::\n\n\n## Administrative Boundaries\n\n**Thailand Subnational Administrative Boundaries** (from HDX): These boundaries will help in restricting the analysis to the Bangkok Metropolitan Region 9BMR) and may also serve for regional analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthaiadmin <- st_read(dsn = \"data/geospatial/tha_adm_rtsd_itos_20210121_shp/\",\n                      layer = \"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/Users/joshuatingsiyuan14/Desktop/isaiahting/ISSS626_GAA/TakeHomeExercise/TakeHome1/data/geospatial/tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n## Importing Aspatial & Geospatial Data\n:::\n\n## Data Preparation\n\n### Data Exploration\n\nUsing the function glimpse() in of dplyr in the tidyverse family, we are able to see the data type of each variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(thaiadmin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 77\nColumns: 17\n$ Shape_Leng <dbl> 2.417227, 1.695100, 1.251111, 1.884945, 3.041716, 1.739908,…\n$ Shape_Area <dbl> 0.13133873, 0.07926199, 0.05323766, 0.12698345, 0.21393797,…\n$ ADM1_EN    <chr> \"Bangkok\", \"Samut Prakan\", \"Nonthaburi\", \"Pathum Thani\", \"P…\n$ ADM1_TH    <chr> \"กรุงเทพมหานคร\", \"สมุทรปราการ\", \"นนทบุรี\", \"ปทุมธานี\", \"พระนครศรีอ…\n$ ADM1_PCODE <chr> \"TH10\", \"TH11\", \"TH12\", \"TH13\", \"TH14\", \"TH15\", \"TH16\", \"TH…\n$ ADM1_REF   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2EN <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT1TH <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM1ALT2TH <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ADM0_EN    <chr> \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\", \"Thailand\",…\n$ ADM0_TH    <chr> \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศไทย\", \"ประเทศ…\n$ ADM0_PCODE <chr> \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\", \"TH\",…\n$ date       <date> 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18, 2019-02-18…\n$ validOn    <date> 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22, 2022-01-22…\n$ validTo    <date> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ geometry   <MULTIPOLYGON [°]> MULTIPOLYGON (((100.6139 13..., MULTIPOLYGON (…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(thaiadmin)\n```\n\n::: {.cell-output-display}\n![](TakeHome1_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(thaiadmin))\n```\n\n::: {.cell-output-display}\n![](TakeHome1_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n### Working with Projection\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(thaiadmin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nthaiadmin32647 <- st_transform(thaiadmin, crs = 32647)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(thaiadmin32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n:::\n\n\nCurrently, the EPSG code in thaiadmin is 32647.\n\n### Point-In-polygon count\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthaiadmin32647$\"acc_code\" <- lengths(st_intersects(thaiadmin32647, rta_sf))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(thaiadmin32647$'acc_code')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    140     503     822    1057    1165    6090 \n```\n\n\n:::\n:::\n\n\nn_distinct() of the dyplr package counts the number of incidents.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_distinct(rta_sf$acc_code)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 81376\n```\n\n\n:::\n:::\n\n\n## Data Wrangling\n\n### *RoadTrafficAccident_SF*\n\n#### Checking for Duplicates\n\nThe output reflected that there are no duplicates in the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- rta_sf %>%\n  group_by_all() %>%\n  filter(n()>1) %>%\n  ungroup()\n\nduplicate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 0 features and 19 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 0 × 20\n# ℹ 20 variables: acc_code <dbl>, incident_datetime <dttm>,\n#   report_datetime <dttm>, province_th <chr>, province_en <chr>, agency <chr>,\n#   route <chr>, vehicle_type <chr>, presumed_cause <chr>, accident_type <chr>,\n#   number_of_vehicles_involved <dbl>, number_of_fatalities <dbl>,\n#   number_of_injuries <dbl>, weather_condition <chr>, road_description <chr>,\n#   slope_description <chr>, geometry <GEOMETRY [m]>, Month_num <dbl>,\n#   Month_fac <ord>, dayofweek <int>\n```\n\n\n:::\n:::\n\n\n#### Filtering to BMR & Dropping Variables: \"*Province_en*\" & \"*Route*\"\n\n\"dplyr::select\" was used as an error message \"Error: unable to find an inherited method for function ‘select’ for signature ‘x = \"sf\"’\".\n\n::: {.cell}\n\n```{.r .cell-code}\nrta_sf_mbr <- rta_sf %>%\n  dplyr::select(-province_th, -route) %>%\n  filter(province_en %in% c(\"Nakhon Pathom\", \"Pathum Thani\", \"Nonthaburi\", \"Samut Prakan\", \"Samut Sakhon\", \"Bangkok\"))\n```\n:::\n\n\nThe two variables were dropped as it were in Thai language. Additionally, the scope has been narrowed to only 6 provinces that are in the BMR.\n\n#### Splitting Date & Time & Classifying as POSIXct\n\nThe incident_datetime and report_datetime column were separated for ease of manipulation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrta_sf_mbr_split <- rta_sf_mbr %>%\n  separate(incident_datetime, into = c(\"incident_date\", \"incident_time\"), sep = \" \") %>%\n  separate(report_datetime, into = c(\"report_date\", \"report_time\"), sep = \" \")\n```\n:::\n\n\nIn ensuring that the data is in POSIXct format, ymd_hms was used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrta_sf_mbr_split <- rta_sf_mbr %>%\n  mutate(\n    datetime_parsed = ymd_hms(incident_datetime),\n    date = ymd_hms(datetime_parsed),\n    time = format(datetime_parsed, \"%H:%M:%S\")\n  )\n```\n:::\n\n\nPulse Check: To check all of the current columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(rta_sf_mbr_split)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"acc_code\"                    \"incident_datetime\"          \n [3] \"report_datetime\"             \"province_en\"                \n [5] \"agency\"                      \"vehicle_type\"               \n [7] \"presumed_cause\"              \"accident_type\"              \n [9] \"number_of_vehicles_involved\" \"number_of_fatalities\"       \n[11] \"number_of_injuries\"          \"weather_condition\"          \n[13] \"road_description\"            \"slope_description\"          \n[15] \"geometry\"                    \"Month_num\"                  \n[17] \"Month_fac\"                   \"dayofweek\"                  \n[19] \"datetime_parsed\"             \"date\"                       \n[21] \"time\"                       \n```\n\n\n:::\n:::\n\n\n### Thai Admin\n\nThe variables that were not used in the analysis were dropped and it was filtered to the BMR.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthaiadmin_bmr <- thaiadmin %>%\n  dplyr::select(-ADM1_TH, -ADM0_TH, -ADM1_REF, -ADM1ALT1EN, -ADM1ALT2EN, -ADM1ALT1TH,\n         -ADM1ALT2TH, -ADM0_PCODE, -validTo, -validOn) %>%\n  filter(ADM1_EN %in% c(\"Nakhon Pathom\", \"Pathum Thani\", \"Nonthaburi\", \"Samut Prakan\", \"Samut Sakhon\", \"Bangkok\"))\n```\n:::\n\n\n#### *owin* object\n\nWhen analysing spatial point patterns, it is a good practice to confine the analysis with a geographical area like Singapore boundary. In **spatstat**, an object called ***owin*** is specially designed to represent this polygonal region.\n\nThe code chunk below is used to covert *sg* SpatialPolygon object into owin object of **spatstat**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbmr_owin <- as.owin(thaiadmin32647)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(bmr_owin)\n```\n\n::: {.cell-output-display}\n![](TakeHome1_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(rta_sf_mbr_split)\n# Create the ppp object with the same window as bmr_owin\nthaiadmin_ppp <- as.ppp(coords, W = bmr_owin)\n\n# View the result\nplot(thaiadmin_ppp)\n```\n\n::: {.cell-output-display}\n![](TakeHome1_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(thaiadmin_ppp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPlanar point pattern:  12986 points\nAverage intensity 2.516079e-08 points per square unit\n\n*Pattern contains duplicated points*\n\nCoordinates are given to 10 decimal places\n\nWindow: polygonal boundary\n728 separate polygons (no holes)\n             vertices        area relative.area\npolygon 1          53 2.53355e+03      4.91e-09\npolygon 2        1523 6.23850e+06      1.21e-05\npolygon 3          42 2.49113e+04      4.83e-08\npolygon 4          62 2.23046e+04      4.32e-08\npolygon 5          56 4.39488e+05      8.52e-07\npolygon 6          46 7.65029e+03      1.48e-08\npolygon 7          29 9.27916e+03      1.80e-08\npolygon 8          59 8.02014e+03      1.55e-08\npolygon 9         300 3.40852e+05      6.60e-07\npolygon 10        112 6.79950e+05      1.32e-06\npolygon 11         42 3.37968e+04      6.55e-08\npolygon 12        219 5.29394e+06      1.03e-05\npolygon 13         50 2.05900e+05      3.99e-07\npolygon 14        268 6.79882e+06      1.32e-05\npolygon 15         34 1.55825e+05      3.02e-07\npolygon 16         51 3.93134e+04      7.62e-08\npolygon 17         78 1.75837e+05      3.41e-07\npolygon 18        101 5.42686e+05      1.05e-06\npolygon 19        256 4.74527e+05      9.19e-07\npolygon 20         58 9.19444e+03      1.78e-08\npolygon 21         59 2.87919e+05      5.58e-07\npolygon 22         60 6.27905e+04      1.22e-07\npolygon 23        485 1.43133e+07      2.77e-05\npolygon 24        117 1.38538e+05      2.68e-07\npolygon 25        104 5.70710e+04      1.11e-07\npolygon 26        195 4.59998e+05      8.91e-07\npolygon 27         73 2.41793e+04      4.68e-08\npolygon 28        210 9.62852e+05      1.87e-06\npolygon 29         97 1.59662e+05      3.09e-07\npolygon 30        178 8.27111e+05      1.60e-06\npolygon 31        156 1.18428e+05      2.29e-07\npolygon 32         47 1.13996e+04      2.21e-08\npolygon 33         95 6.90830e+04      1.34e-07\npolygon 34         83 3.93177e+05      7.62e-07\npolygon 35         51 2.10677e+04      4.08e-08\npolygon 36         49 6.59279e+04      1.28e-07\npolygon 37         58 5.17956e+03      1.00e-08\npolygon 38         78 2.71442e+04      5.26e-08\npolygon 39        175 6.79048e+05      1.32e-06\npolygon 40        108 7.31483e+04      1.42e-07\npolygon 41        350 4.09442e+06      7.93e-06\npolygon 42        996 5.02741e+06      9.74e-06\npolygon 43         37 4.46504e+03      8.65e-09\npolygon 44         54 3.50271e+05      6.79e-07\npolygon 45        120 1.24977e+05      2.42e-07\npolygon 46        140 1.09669e+05      2.12e-07\npolygon 47         50 1.03162e+05      2.00e-07\npolygon 48         46 1.22206e+04      2.37e-08\npolygon 49         61 2.95012e+04      5.72e-08\npolygon 50        189 1.49213e+06      2.89e-06\npolygon 51         67 6.80527e+05      1.32e-06\npolygon 52        104 1.24896e+05      2.42e-07\npolygon 53         70 2.76957e+04      5.37e-08\npolygon 54         38 3.01574e+05      5.84e-07\npolygon 55         53 1.26348e+04      2.45e-08\npolygon 56         73 6.96475e+04      1.35e-07\npolygon 57         97 1.16021e+05      2.25e-07\npolygon 58        288 6.13520e+05      1.19e-06\npolygon 59        125 9.76483e+04      1.89e-07\npolygon 60        290 4.90893e+05      9.51e-07\npolygon 61         86 2.96223e+03      5.74e-09\npolygon 62        107 7.10532e+04      1.38e-07\npolygon 63         42 2.42729e+03      4.70e-09\npolygon 64         82 9.69627e+03      1.88e-08\npolygon 65        116 4.07177e+03      7.89e-09\npolygon 66        284 4.24081e+05      8.22e-07\npolygon 67        167 5.62031e+04      1.09e-07\npolygon 68        120 2.36548e+05      4.58e-07\npolygon 69       4581 2.10438e+08      4.08e-04\npolygon 70         86 5.63982e+04      1.09e-07\npolygon 71         64 8.12083e+03      1.57e-08\npolygon 72         62 6.58777e+04      1.28e-07\npolygon 73         52 5.27989e+04      1.02e-07\npolygon 74        152 2.86297e+03      5.55e-09\npolygon 75         54 9.21124e+04      1.78e-07\npolygon 76         52 3.61962e+04      7.01e-08\npolygon 77         69 1.02026e+05      1.98e-07\npolygon 78         49 4.19303e+04      8.12e-08\npolygon 79         37 1.40027e+04      2.71e-08\npolygon 80        226 3.76927e+05      7.30e-07\npolygon 81         86 2.75512e+05      5.34e-07\npolygon 82          8 7.96410e+03      1.54e-08\npolygon 83         38 7.22431e+04      1.40e-07\npolygon 84         48 3.33832e+04      6.47e-08\npolygon 85         46 2.94345e+04      5.70e-08\npolygon 86         33 6.35164e+03      1.23e-08\npolygon 87        344 4.03961e+06      7.83e-06\npolygon 88        441 7.31057e+05      1.42e-06\npolygon 89        249 4.78911e+05      9.28e-07\npolygon 90         52 5.01728e+03      9.72e-09\npolygon 91        116 3.62860e+05      7.03e-07\npolygon 92        125 7.50948e+04      1.45e-07\npolygon 93        123 8.15184e+04      1.58e-07\npolygon 94        108 2.78359e+06      5.39e-06\npolygon 95         56 2.11673e+05      4.10e-07\npolygon 96        364 1.86320e+06      3.61e-06\npolygon 97        161 5.21457e+05      1.01e-06\npolygon 98         34 6.70203e+03      1.30e-08\npolygon 99         32 7.97567e+03      1.55e-08\npolygon 100       130 1.97501e+06      3.83e-06\npolygon 101      1416 1.22482e+07      2.37e-05\npolygon 102        57 9.17313e+04      1.78e-07\npolygon 103        60 8.59325e+03      1.66e-08\npolygon 104        89 6.72186e+04      1.30e-07\npolygon 105        79 3.91725e+04      7.59e-08\npolygon 106        58 1.80916e+04      3.51e-08\npolygon 107        49 1.25443e+04      2.43e-08\npolygon 108       632 2.95702e+06      5.73e-06\npolygon 109        52 4.08946e+04      7.92e-08\npolygon 110       130 1.28922e+05      2.50e-07\npolygon 111        54 3.41374e+04      6.61e-08\npolygon 112        88 3.10409e+04      6.01e-08\npolygon 113       155 1.31462e+05      2.55e-07\npolygon 114        57 1.35510e+04      2.63e-08\npolygon 115        58 1.74498e+04      3.38e-08\npolygon 116       203 4.73856e+04      9.18e-08\npolygon 117       114 1.28611e+05      2.49e-07\npolygon 118       105 4.43573e+05      8.59e-07\npolygon 119       255 3.36132e+04      6.51e-08\npolygon 120       190 3.98132e+04      7.71e-08\npolygon 121      2874 1.10463e+08      2.14e-04\npolygon 122       143 5.49569e+04      1.06e-07\npolygon 123       186 2.29056e+05      4.44e-07\npolygon 124       154 1.53180e+06      2.97e-06\npolygon 125       440 2.10619e+04      4.08e-08\npolygon 126       302 4.71123e+04      9.13e-08\npolygon 127        56 1.17346e+05      2.27e-07\npolygon 128        31 3.09800e+04      6.00e-08\npolygon 129       130 4.69193e+04      9.09e-08\npolygon 130       271 1.22079e+06      2.37e-06\npolygon 131        81 2.68329e+04      5.20e-08\npolygon 132        26 2.60408e+03      5.05e-09\npolygon 133       400 1.88826e+06      3.66e-06\npolygon 134        46 1.37856e+04      2.67e-08\npolygon 135        26 7.52813e+04      1.46e-07\npolygon 136        11 1.09345e+04      2.12e-08\npolygon 137        12 1.21607e+04      2.36e-08\npolygon 138       107 1.61052e+05      3.12e-07\npolygon 139        39 1.02309e+05      1.98e-07\npolygon 140        13 2.16292e+04      4.19e-08\npolygon 141        31 8.74137e+04      1.69e-07\npolygon 142        10 1.61048e+04      3.12e-08\npolygon 143        12 5.99257e+03      1.16e-08\npolygon 144        21 8.49665e+04      1.65e-07\npolygon 145       227 1.97629e+06      3.83e-06\npolygon 146        56 3.94580e+04      7.65e-08\npolygon 147        54 4.76934e+04      9.24e-08\npolygon 148       293 8.85374e+05      1.72e-06\npolygon 149        71 5.28210e+04      1.02e-07\npolygon 150        37 1.12415e+04      2.18e-08\npolygon 151        76 1.68825e+05      3.27e-07\npolygon 152        59 8.12766e+04      1.57e-07\npolygon 153        80 8.32872e+04      1.61e-07\npolygon 154        60 2.66550e+04      5.16e-08\npolygon 155       116 1.79496e+05      3.48e-07\npolygon 156       197 7.99359e+04      1.55e-07\npolygon 157        58 9.33090e+04      1.81e-07\npolygon 158        44 9.01237e+03      1.75e-08\npolygon 159       152 8.10480e+04      1.57e-07\npolygon 160        95 7.92271e+05      1.54e-06\npolygon 161       104 4.56811e+04      8.85e-08\npolygon 162        53 7.07697e+04      1.37e-07\npolygon 163        35 3.21371e+04      6.23e-08\npolygon 164        30 2.47659e+03      4.80e-09\npolygon 165        76 3.78024e+04      7.32e-08\npolygon 166        27 4.82358e+04      9.35e-08\npolygon 167        23 7.26466e+03      1.41e-08\npolygon 168        52 3.88426e+03      7.53e-09\npolygon 169        40 7.02522e+04      1.36e-07\npolygon 170        30 5.40608e+04      1.05e-07\npolygon 171        99 2.16592e+05      4.20e-07\npolygon 172        83 2.81683e+04      5.46e-08\npolygon 173        40 7.75391e+03      1.50e-08\npolygon 174       157 1.83378e+07      3.55e-05\npolygon 175       167 2.71430e+05      5.26e-07\npolygon 176        86 2.35305e+04      4.56e-08\npolygon 177        14 5.15806e+03      9.99e-09\npolygon 178        62 4.49328e+04      8.71e-08\npolygon 179        27 6.19557e+04      1.20e-07\npolygon 180       133 5.92845e+05      1.15e-06\npolygon 181        86 6.04232e+05      1.17e-06\npolygon 182        72 1.31340e+05      2.54e-07\npolygon 183       138 1.16705e+06      2.26e-06\npolygon 184       245 3.45624e+06      6.70e-06\npolygon 185       109 4.18371e+05      8.11e-07\npolygon 186       472 2.39033e+07      4.63e-05\npolygon 187      1779 1.22523e+08      2.37e-04\npolygon 188        60 1.00340e+05      1.94e-07\npolygon 189        20 4.44892e+04      8.62e-08\npolygon 190        13 6.19586e+03      1.20e-08\npolygon 191       219 2.40052e+05      4.65e-07\npolygon 192        61 3.03300e+05      5.88e-07\npolygon 193        97 7.00283e+04      1.36e-07\npolygon 194      1062 1.69975e+07      3.29e-05\npolygon 195       145 3.01654e+05      5.84e-07\npolygon 196        91 5.83270e+04      1.13e-07\npolygon 197       105 4.14904e+04      8.04e-08\npolygon 198        93 3.63466e+04      7.04e-08\npolygon 199        39 1.01887e+04      1.97e-08\npolygon 200       130 2.63366e+05      5.10e-07\npolygon 201        77 5.34847e+04      1.04e-07\npolygon 202       100 1.23871e+05      2.40e-07\npolygon 203       202 1.95658e+05      3.79e-07\npolygon 204        52 2.04966e+05      3.97e-07\npolygon 205        25 2.58576e+04      5.01e-08\npolygon 206       417 1.51241e+06      2.93e-06\npolygon 207        51 5.71169e+03      1.11e-08\npolygon 208        53 1.52662e+04      2.96e-08\npolygon 209       119 2.77607e+04      5.38e-08\npolygon 210       116 2.76633e+05      5.36e-07\npolygon 211       253 7.77594e+05      1.51e-06\npolygon 212        65 5.53954e+04      1.07e-07\npolygon 213        62 2.17422e+04      4.21e-08\npolygon 214        42 2.64518e+04      5.13e-08\npolygon 215       113 5.21417e+04      1.01e-07\npolygon 216        11 2.24699e+03      4.35e-09\npolygon 217       233 4.05953e+05      7.87e-07\npolygon 218        74 3.72021e+04      7.21e-08\npolygon 219        61 2.21703e+04      4.30e-08\npolygon 220        43 3.47592e+04      6.73e-08\npolygon 221        43 7.09465e+03      1.37e-08\npolygon 222        63 8.21115e+04      1.59e-07\npolygon 223        68 7.42576e+04      1.44e-07\npolygon 224        52 6.13990e+04      1.19e-07\npolygon 225        57 6.14708e+04      1.19e-07\npolygon 226       112 3.32886e+05      6.45e-07\npolygon 227       142 1.09433e+06      2.12e-06\npolygon 228        50 7.74627e+04      1.50e-07\npolygon 229        34 5.71566e+03      1.11e-08\npolygon 230        47 3.28406e+04      6.36e-08\npolygon 231       243 1.32610e+06      2.57e-06\npolygon 232        34 2.24836e+03      4.36e-09\npolygon 233       157 1.42622e+05      2.76e-07\npolygon 234       179 5.63039e+06      1.09e-05\npolygon 235        39 6.77867e+04      1.31e-07\npolygon 236        42 8.65515e+02      1.68e-09\npolygon 237       205 6.69319e+05      1.30e-06\npolygon 238        54 2.77612e+03      5.38e-09\npolygon 239        90 6.76635e+04      1.31e-07\npolygon 240        67 7.75670e+04      1.50e-07\npolygon 241       143 1.74168e+05      3.37e-07\npolygon 242        40 1.60737e+05      3.11e-07\npolygon 243      2552 2.35426e+08      4.56e-04\npolygon 244        70 3.94070e+04      7.64e-08\npolygon 245       208 1.63232e+06      3.16e-06\npolygon 246        83 2.82963e+05      5.48e-07\npolygon 247       175 1.36324e+06      2.64e-06\npolygon 248        65 6.64185e+05      1.29e-06\npolygon 249       138 6.64843e+04      1.29e-07\npolygon 250        31 3.78277e+05      7.33e-07\npolygon 251        32 5.35809e+03      1.04e-08\npolygon 252       147 9.30384e+05      1.80e-06\npolygon 253        40 1.12524e+05      2.18e-07\npolygon 254        25 2.10691e+03      4.08e-09\npolygon 255       629 1.85471e+07      3.59e-05\npolygon 256        42 1.21267e+04      2.35e-08\npolygon 257        58 5.54077e+04      1.07e-07\npolygon 258       218 3.28794e+05      6.37e-07\npolygon 259        71 7.82792e+04      1.52e-07\npolygon 260        67 4.87781e+05      9.45e-07\npolygon 261        57 2.08458e+05      4.04e-07\npolygon 262       226 4.85861e+06      9.41e-06\npolygon 263        88 8.14478e+04      1.58e-07\npolygon 264        56 2.16487e+06      4.19e-06\npolygon 265        79 1.29659e+05      2.51e-07\npolygon 266       132 1.79898e+05      3.49e-07\npolygon 267        33 1.02731e+04      1.99e-08\npolygon 268       142 1.54527e+06      2.99e-06\npolygon 269       729 1.48280e+07      2.87e-05\npolygon 270       133 1.05890e+05      2.05e-07\npolygon 271        83 2.34362e+05      4.54e-07\npolygon 272        14 1.07965e+04      2.09e-08\npolygon 273       168 4.15326e+05      8.05e-07\npolygon 274        36 2.35428e+04      4.56e-08\npolygon 275        23 1.15661e+04      2.24e-08\npolygon 276        45 5.15325e+04      9.98e-08\npolygon 277        53 6.94478e+05      1.35e-06\npolygon 278        59 5.77518e+04      1.12e-07\npolygon 279       190 3.61314e+05      7.00e-07\npolygon 280       976 8.68567e+06      1.68e-05\npolygon 281        29 2.06981e+04      4.01e-08\npolygon 282        22 1.58427e+04      3.07e-08\npolygon 283        93 2.83389e+06      5.49e-06\npolygon 284        96 1.01050e+05      1.96e-07\npolygon 285       213 9.57989e+06      1.86e-05\npolygon 286       133 8.18763e+05      1.59e-06\npolygon 287       187 6.84325e+05      1.33e-06\npolygon 288        46 1.34985e+05      2.62e-07\npolygon 289        28 3.30205e+04      6.40e-08\npolygon 290        32 2.18078e+04      4.23e-08\npolygon 291       113 2.19925e+05      4.26e-07\npolygon 292        84 6.51097e+04      1.26e-07\npolygon 293       312 5.67054e+05      1.10e-06\npolygon 294        33 1.32885e+04      2.57e-08\npolygon 295        88 3.10315e+05      6.01e-07\npolygon 296        69 3.45741e+05      6.70e-07\npolygon 297       109 7.10583e+05      1.38e-06\npolygon 298       496 1.97740e+07      3.83e-05\npolygon 299        76 7.29808e+05      1.41e-06\npolygon 300        32 2.14783e+04      4.16e-08\npolygon 301        76 5.01893e+04      9.72e-08\npolygon 302        49 6.44866e+04      1.25e-07\npolygon 303        38 2.44360e+04      4.73e-08\npolygon 304        34 1.44985e+04      2.81e-08\npolygon 305        47 9.61114e+04      1.86e-07\npolygon 306       282 9.25103e+06      1.79e-05\npolygon 307        31 5.93875e+04      1.15e-07\npolygon 308       750 1.01758e+08      1.97e-04\npolygon 309        36 2.17645e+04      4.22e-08\npolygon 310        20 3.07083e+04      5.95e-08\npolygon 311        56 1.37639e+05      2.67e-07\npolygon 312        54 2.17419e+05      4.21e-07\npolygon 313        76 2.35627e+06      4.57e-06\npolygon 314        37 1.48907e+05      2.89e-07\npolygon 315        31 2.74226e+04      5.31e-08\npolygon 316        18 1.59275e+04      3.09e-08\npolygon 317        46 9.19515e+04      1.78e-07\npolygon 318       545 6.85244e+07      1.33e-04\npolygon 319        47 2.53689e+05      4.92e-07\npolygon 320        46 1.16386e+05      2.26e-07\npolygon 321        37 1.09409e+04      2.12e-08\npolygon 322        63 1.04438e+06      2.02e-06\npolygon 323       177 6.53342e+05      1.27e-06\npolygon 324       696 3.67112e+06      7.11e-06\npolygon 325       204 3.91698e+05      7.59e-07\npolygon 326       415 6.92778e+05      1.34e-06\npolygon 327        61 7.78251e+04      1.51e-07\npolygon 328        37 3.82324e+04      7.41e-08\npolygon 329       106 6.70020e+05      1.30e-06\npolygon 330       183 7.86389e+05      1.52e-06\npolygon 331        17 5.99620e+03      1.16e-08\npolygon 332        36 5.59015e+04      1.08e-07\npolygon 333        24 5.14841e+04      9.98e-08\npolygon 334        73 6.15783e+04      1.19e-07\npolygon 335        67 5.42200e+04      1.05e-07\npolygon 336        40 9.26211e+04      1.79e-07\npolygon 337        28 2.40995e+05      4.67e-07\npolygon 338        72 1.12406e+04      2.18e-08\npolygon 339        37 1.95637e+03      3.79e-09\npolygon 340        58 2.73734e+05      5.30e-07\npolygon 341       105 2.50438e+05      4.85e-07\npolygon 342        96 3.31618e+06      6.43e-06\npolygon 343        23 2.20023e+04      4.26e-08\npolygon 344        46 5.56469e+04      1.08e-07\npolygon 345       146 2.19599e+06      4.25e-06\npolygon 346       858 2.06853e+06      4.01e-06\npolygon 347       119 4.60709e+05      8.93e-07\npolygon 348        40 5.63947e+03      1.09e-08\npolygon 349        34 2.67960e+04      5.19e-08\npolygon 350       144 5.21384e+04      1.01e-07\npolygon 351        23 1.52352e+04      2.95e-08\npolygon 352        50 1.43738e+04      2.78e-08\npolygon 353        29 9.78437e+04      1.90e-07\npolygon 354        70 1.55289e+05      3.01e-07\npolygon 355        50 2.49115e+04      4.83e-08\npolygon 356        69 3.49514e+04      6.77e-08\npolygon 357        18 1.63675e+04      3.17e-08\npolygon 358        61 1.93303e+04      3.75e-08\npolygon 359        68 3.55635e+04      6.89e-08\npolygon 360       121 4.20225e+05      8.14e-07\npolygon 361        55 4.37920e+03      8.48e-09\npolygon 362        79 3.72043e+04      7.21e-08\npolygon 363        48 7.44105e+03      1.44e-08\npolygon 364        53 1.05232e+04      2.04e-08\npolygon 365        53 1.78218e+04      3.45e-08\npolygon 366        59 4.19901e+04      8.14e-08\npolygon 367       359 6.41671e+05      1.24e-06\npolygon 368       185 7.41242e+04      1.44e-07\npolygon 369        48 5.59843e+03      1.08e-08\npolygon 370       103 7.90648e+04      1.53e-07\npolygon 371        75 5.70544e+04      1.11e-07\npolygon 372        49 1.36485e+03      2.64e-09\npolygon 373        14 5.72691e+03      1.11e-08\npolygon 374        55 2.69781e+04      5.23e-08\npolygon 375        32 3.31282e+03      6.42e-09\npolygon 376       223 2.07929e+05      4.03e-07\npolygon 377        70 5.49744e+04      1.07e-07\npolygon 378        52 6.89398e+04      1.34e-07\npolygon 379        63 7.92309e+03      1.54e-08\npolygon 380        21 1.19439e+03      2.31e-09\npolygon 381        60 1.45064e+04      2.81e-08\npolygon 382        27 1.58312e+03      3.07e-09\npolygon 383        42 8.58139e+04      1.66e-07\npolygon 384        17 6.68861e+03      1.30e-08\npolygon 385        15 2.10492e+03      4.08e-09\npolygon 386        24 5.18389e+03      1.00e-08\npolygon 387       174 2.03651e+05      3.95e-07\npolygon 388        30 1.10485e+04      2.14e-08\npolygon 389       273 7.80652e+05      1.51e-06\npolygon 390       189 3.83543e+05      7.43e-07\npolygon 391       112 1.70948e+05      3.31e-07\npolygon 392       158 1.50097e+05      2.91e-07\npolygon 393        15 2.33364e+03      4.52e-09\npolygon 394        35 1.25320e+03      2.43e-09\npolygon 395        31 4.97341e+04      9.64e-08\npolygon 396        67 6.77975e+04      1.31e-07\npolygon 397        26 5.68397e+04      1.10e-07\npolygon 398        88 8.06683e+04      1.56e-07\npolygon 399        27 5.35406e+04      1.04e-07\npolygon 400       647 2.23542e+06      4.33e-06\npolygon 401      7658 5.21946e+08      1.01e-03\npolygon 402       168 3.93488e+05      7.62e-07\npolygon 403        44 6.48599e+04      1.26e-07\npolygon 404        37 2.30143e+04      4.46e-08\npolygon 405        18 2.87844e+03      5.58e-09\npolygon 406        70 2.27072e+05      4.40e-07\npolygon 407        58 4.98893e+03      9.67e-09\npolygon 408        81 2.28360e+04      4.42e-08\npolygon 409        22 4.83019e+03      9.36e-09\npolygon 410        37 5.19766e+03      1.01e-08\npolygon 411        17 6.41580e+02      1.24e-09\npolygon 412      1042 3.66538e+07      7.10e-05\npolygon 413        37 9.83199e+05      1.90e-06\npolygon 414        97 4.08270e+04      7.91e-08\npolygon 415        26 1.97750e+04      3.83e-08\npolygon 416        22 3.43179e+03      6.65e-09\npolygon 417        37 2.62906e+03      5.09e-09\npolygon 418        88 7.04665e+04      1.37e-07\npolygon 419        19 5.05037e+04      9.79e-08\npolygon 420        35 9.15793e+04      1.77e-07\npolygon 421        15 3.98830e+04      7.73e-08\npolygon 422        66 4.32073e+05      8.37e-07\npolygon 423       151 3.94490e+06      7.64e-06\npolygon 424        18 6.74356e+04      1.31e-07\npolygon 425        36 8.12520e+04      1.57e-07\npolygon 426        28 2.19188e+04      4.25e-08\npolygon 427        33 1.46144e+03      2.83e-09\npolygon 428        29 6.08303e+03      1.18e-08\npolygon 429         9 5.53715e+03      1.07e-08\npolygon 430        57 5.48791e+05      1.06e-06\npolygon 431       132 7.72824e+04      1.50e-07\npolygon 432        26 8.00521e+03      1.55e-08\npolygon 433        25 1.11667e+04      2.16e-08\npolygon 434        55 1.67508e+05      3.25e-07\npolygon 435        31 1.15254e+04      2.23e-08\npolygon 436        24 7.19219e+04      1.39e-07\npolygon 437        76 2.37555e+05      4.60e-07\npolygon 438        69 1.35858e+04      2.63e-08\npolygon 439        65 4.23839e+04      8.21e-08\npolygon 440        36 1.14927e+05      2.23e-07\npolygon 441      2287 9.12824e+07      1.77e-04\npolygon 442        95 4.42889e+04      8.58e-08\npolygon 443       109 1.03446e+05      2.00e-07\npolygon 444        77 1.59703e+05      3.09e-07\npolygon 445       227 1.99692e+05      3.87e-07\npolygon 446        49 1.07047e+05      2.07e-07\npolygon 447       146 5.99463e+04      1.16e-07\npolygon 448       159 2.65301e+05      5.14e-07\npolygon 449        65 1.19625e+04      2.32e-08\npolygon 450        71 1.52377e+04      2.95e-08\npolygon 451        23 1.31938e+04      2.56e-08\npolygon 452        93 3.58871e+04      6.95e-08\npolygon 453       278 4.58306e+05      8.88e-07\npolygon 454       113 3.79180e+04      7.35e-08\npolygon 455       159 4.96168e+05      9.61e-07\npolygon 456        96 2.93744e+06      5.69e-06\npolygon 457        45 2.67684e+04      5.19e-08\npolygon 458        49 1.08557e+04      2.10e-08\npolygon 459        19 6.24117e+03      1.21e-08\npolygon 460        16 2.96742e+03      5.75e-09\npolygon 461        12 7.15038e+03      1.39e-08\npolygon 462        79 1.51253e+05      2.93e-07\npolygon 463        22 1.01888e+04      1.97e-08\npolygon 464        14 1.57671e+04      3.05e-08\npolygon 465        23 1.80620e+04      3.50e-08\npolygon 466        47 3.75673e+04      7.28e-08\npolygon 467       160 2.73650e+05      5.30e-07\npolygon 468        68 1.23958e+05      2.40e-07\npolygon 469        37 4.24857e+04      8.23e-08\npolygon 470        38 1.04510e+04      2.02e-08\npolygon 471        50 1.47986e+04      2.87e-08\npolygon 472        27 1.22110e+05      2.37e-07\npolygon 473        67 1.78475e+04      3.46e-08\npolygon 474        66 2.85792e+04      5.54e-08\npolygon 475       126 4.96218e+05      9.61e-07\npolygon 476       105 4.42466e+04      8.57e-08\npolygon 477       114 6.63473e+05      1.29e-06\npolygon 478        41 1.33234e+04      2.58e-08\npolygon 479        65 1.59051e+04      3.08e-08\npolygon 480       113 2.05741e+05      3.99e-07\npolygon 481       267 5.51487e+05      1.07e-06\npolygon 482        39 1.14095e+04      2.21e-08\npolygon 483        56 8.94248e+03      1.73e-08\npolygon 484        74 1.72258e+04      3.34e-08\npolygon 485       107 2.28611e+04      4.43e-08\npolygon 486        62 1.90286e+04      3.69e-08\npolygon 487        98 4.19191e+04      8.12e-08\npolygon 488        65 1.80129e+04      3.49e-08\npolygon 489       342 3.86996e+06      7.50e-06\npolygon 490        43 2.19587e+04      4.25e-08\npolygon 491       107 3.13084e+04      6.07e-08\npolygon 492       320 1.58487e+07      3.07e-05\npolygon 493        58 9.88911e+03      1.92e-08\npolygon 494        79 2.49221e+04      4.83e-08\npolygon 495        89 2.40401e+06      4.66e-06\npolygon 496        19 2.92454e+04      5.67e-08\npolygon 497        35 1.37126e+04      2.66e-08\npolygon 498        82 8.40732e+05      1.63e-06\npolygon 499       155 1.87816e+05      3.64e-07\npolygon 500        36 5.77116e+04      1.12e-07\npolygon 501        30 4.80004e+04      9.30e-08\npolygon 502        52 1.48710e+05      2.88e-07\npolygon 503       315 1.42816e+07      2.77e-05\npolygon 504        40 9.87368e+03      1.91e-08\npolygon 505        50 2.38974e+05      4.63e-07\npolygon 506        54 1.58622e+03      3.07e-09\npolygon 507        27 2.28487e+05      4.43e-07\npolygon 508        30 5.07905e+04      9.84e-08\npolygon 509       601 2.03002e+07      3.93e-05\npolygon 510        53 3.78138e+05      7.33e-07\npolygon 511        34 2.43995e+05      4.73e-07\npolygon 512       148 2.57773e+06      4.99e-06\npolygon 513        95 1.56768e+05      3.04e-07\npolygon 514        24 4.73557e+03      9.18e-09\npolygon 515        96 4.15899e+05      8.06e-07\npolygon 516       124 3.99783e+05      7.75e-07\npolygon 517        56 1.70067e+05      3.30e-07\npolygon 518        28 1.53720e+04      2.98e-08\npolygon 519        55 1.33170e+06      2.58e-06\npolygon 520       118 3.29217e+05      6.38e-07\npolygon 521        29 6.20959e+04      1.20e-07\npolygon 522        33 2.15361e+05      4.17e-07\npolygon 523        58 4.16817e+05      8.08e-07\npolygon 524        69 3.35637e+04      6.50e-08\npolygon 525       343 4.66814e+06      9.04e-06\npolygon 526        42 1.16465e+05      2.26e-07\npolygon 527        11 5.06855e+03      9.82e-09\npolygon 528         9 5.15857e+03      9.99e-09\npolygon 529         9 5.35523e+03      1.04e-08\npolygon 530         9 3.83108e+03      7.42e-09\npolygon 531         9 3.58652e+03      6.95e-09\npolygon 532       507 1.40987e+07      2.73e-05\npolygon 533       176 4.33569e+04      8.40e-08\npolygon 534       145 9.41676e+05      1.82e-06\npolygon 535        50 8.12779e+05      1.57e-06\npolygon 536       132 1.36344e+05      2.64e-07\npolygon 537        64 6.09134e+05      1.18e-06\npolygon 538        58 4.28221e+03      8.30e-09\npolygon 539        86 6.10087e+05      1.18e-06\npolygon 540        33 8.51220e+04      1.65e-07\npolygon 541        36 1.29299e+05      2.51e-07\npolygon 542        36 3.09126e+05      5.99e-07\npolygon 543        78 2.41537e+05      4.68e-07\npolygon 544       391 2.05521e+06      3.98e-06\npolygon 545        55 7.68289e+04      1.49e-07\npolygon 546       149 3.98786e+04      7.73e-08\npolygon 547        53 3.68511e+04      7.14e-08\npolygon 548        68 9.62080e+03      1.86e-08\npolygon 549       111 6.66904e+05      1.29e-06\npolygon 550        41 6.36567e+03      1.23e-08\npolygon 551        23 3.28407e+04      6.36e-08\npolygon 552        24 2.01316e+04      3.90e-08\npolygon 553        64 1.78360e+04      3.46e-08\npolygon 554        46 2.35588e+05      4.56e-07\npolygon 555        28 1.43876e+04      2.79e-08\npolygon 556        42 5.42452e+04      1.05e-07\npolygon 557       103 9.55404e+05      1.85e-06\npolygon 558       409 1.59832e+06      3.10e-06\npolygon 559        26 1.43374e+04      2.78e-08\npolygon 560        23 1.56599e+04      3.03e-08\npolygon 561        56 1.07634e+05      2.09e-07\npolygon 562        29 2.08616e+04      4.04e-08\npolygon 563        23 8.70746e+04      1.69e-07\npolygon 564        22 2.44345e+04      4.73e-08\npolygon 565        29 2.12011e+05      4.11e-07\npolygon 566        26 4.30850e+04      8.35e-08\npolygon 567      3076 1.54644e+08      3.00e-04\npolygon 568        33 3.30314e+04      6.40e-08\npolygon 569        45 1.36371e+04      2.64e-08\npolygon 570        42 9.78281e+03      1.90e-08\npolygon 571        42 1.95779e+04      3.79e-08\npolygon 572        77 1.36570e+04      2.65e-08\npolygon 573        56 4.17267e+04      8.08e-08\npolygon 574        42 7.73459e+04      1.50e-07\npolygon 575       366 1.55299e+06      3.01e-06\npolygon 576       186 3.88337e+05      7.52e-07\npolygon 577       265 4.75199e+06      9.21e-06\npolygon 578        97 1.36906e+05      2.65e-07\npolygon 579       212 7.21442e+05      1.40e-06\npolygon 580        37 1.94568e+05      3.77e-07\npolygon 581        46 2.01957e+04      3.91e-08\npolygon 582        48 2.22218e+05      4.31e-07\npolygon 583        97 1.20950e+05      2.34e-07\npolygon 584        42 1.54741e+04      3.00e-08\npolygon 585        39 1.73207e+05      3.36e-07\npolygon 586        28 3.91697e+04      7.59e-08\npolygon 587        22 1.78201e+03      3.45e-09\npolygon 588        33 2.45257e+03      4.75e-09\npolygon 589       277 1.51027e+06      2.93e-06\npolygon 590       168 1.47433e+06      2.86e-06\npolygon 591        38 2.26133e+05      4.38e-07\npolygon 592       144 4.08278e+05      7.91e-07\npolygon 593        68 3.78086e+05      7.33e-07\npolygon 594        72 2.32205e+04      4.50e-08\npolygon 595       121 5.13480e+06      9.95e-06\npolygon 596        58 2.13844e+04      4.14e-08\npolygon 597        81 4.79942e+04      9.30e-08\npolygon 598       137 3.33007e+04      6.45e-08\npolygon 599       473 7.49755e+06      1.45e-05\npolygon 600        39 1.67970e+05      3.25e-07\npolygon 601       365 1.69664e+06      3.29e-06\npolygon 602        40 1.23577e+05      2.39e-07\npolygon 603       134 2.23991e+04      4.34e-08\npolygon 604       452 3.35999e+07      6.51e-05\npolygon 605        44 2.67716e+04      5.19e-08\npolygon 606        64 4.78819e+04      9.28e-08\npolygon 607        53 3.69509e+03      7.16e-09\npolygon 608       142 1.11369e+05      2.16e-07\npolygon 609       125 2.17926e+06      4.22e-06\npolygon 610        19 3.20952e+04      6.22e-08\npolygon 611       255 2.24402e+06      4.35e-06\npolygon 612        37 1.97936e+05      3.84e-07\npolygon 613        64 4.30987e+03      8.35e-09\npolygon 614       119 1.14005e+04      2.21e-08\npolygon 615        57 9.63602e+04      1.87e-07\npolygon 616        24 2.27351e+05      4.41e-07\npolygon 617       420 1.18945e+07      2.30e-05\npolygon 618       135 3.00968e+05      5.83e-07\npolygon 619        76 9.77677e+03      1.89e-08\npolygon 620        98 3.97489e+05      7.70e-07\npolygon 621        90 4.44495e+05      8.61e-07\npolygon 622        30 4.92474e+03      9.54e-09\npolygon 623        20 7.02674e+04      1.36e-07\npolygon 624        13 9.92488e+03      1.92e-08\npolygon 625        10 1.09966e+04      2.13e-08\npolygon 626       105 8.67378e+05      1.68e-06\npolygon 627         8 5.19214e+03      1.01e-08\npolygon 628        12 5.26167e+03      1.02e-08\npolygon 629        58 2.33547e+05      4.53e-07\npolygon 630        86 1.84186e+05      3.57e-07\npolygon 631        26 3.08047e+04      5.97e-08\npolygon 632        15 1.59462e+04      3.09e-08\npolygon 633        15 1.40602e+04      2.72e-08\npolygon 634        24 6.15344e+02      1.19e-09\npolygon 635        28 7.59425e+04      1.47e-07\npolygon 636        46 4.21602e+05      8.17e-07\npolygon 637       973 4.53393e+06      8.78e-06\npolygon 638       236 3.69682e+04      7.16e-08\npolygon 639       123 2.05167e+04      3.98e-08\npolygon 640        16 1.78479e+04      3.46e-08\npolygon 641        46 2.64240e+04      5.12e-08\npolygon 642        21 1.58657e+03      3.07e-09\npolygon 643       130 1.46585e+06      2.84e-06\npolygon 644        54 2.63840e+05      5.11e-07\npolygon 645       569 8.23323e+05      1.60e-06\npolygon 646        15 2.47074e+04      4.79e-08\npolygon 647        21 1.30712e+04      2.53e-08\npolygon 648        21 3.12432e+04      6.05e-08\npolygon 649        46 1.23221e+05      2.39e-07\npolygon 650        83 1.21574e+06      2.36e-06\npolygon 651        12 5.86805e+03      1.14e-08\npolygon 652       101 3.42115e+05      6.63e-07\npolygon 653      1497 1.51898e+08      2.94e-04\npolygon 654        57 1.39542e+05      2.70e-07\npolygon 655        27 1.20628e+05      2.34e-07\npolygon 656       204 5.88042e+06      1.14e-05\npolygon 657       141 8.66534e+05      1.68e-06\npolygon 658        38 6.23377e+05      1.21e-06\npolygon 659        48 2.47230e+05      4.79e-07\npolygon 660       179 1.30495e+06      2.53e-06\npolygon 661        36 1.14201e+05      2.21e-07\npolygon 662        15 1.45050e+04      2.81e-08\npolygon 663       143 8.24087e+05      1.60e-06\npolygon 664        18 4.19441e+03      8.13e-09\npolygon 665        40 1.93887e+04      3.76e-08\npolygon 666       105 2.81658e+05      5.46e-07\npolygon 667        51 2.19842e+05      4.26e-07\npolygon 668       505 6.33277e+05      1.23e-06\npolygon 669       106 1.03407e+05      2.00e-07\npolygon 670        53 2.72546e+04      5.28e-08\npolygon 671        37 6.11314e+04      1.18e-07\npolygon 672       841 1.83412e+06      3.55e-06\npolygon 673        36 1.25970e+05      2.44e-07\npolygon 674        34 5.79091e+03      1.12e-08\npolygon 675        37 3.76989e+04      7.30e-08\npolygon 676        16 1.25536e+04      2.43e-08\npolygon 677        78 8.69543e+04      1.68e-07\npolygon 678        16 3.04913e+04      5.91e-08\npolygon 679        34 4.63023e+04      8.97e-08\npolygon 680       139 7.82568e+04      1.52e-07\npolygon 681        42 7.95697e+04      1.54e-07\npolygon 682        49 1.18881e+05      2.30e-07\npolygon 683        58 9.55949e+04      1.85e-07\npolygon 684        21 2.08564e+04      4.04e-08\npolygon 685        65 5.29567e+05      1.03e-06\npolygon 686        41 1.73404e+04      3.36e-08\npolygon 687        65 1.69682e+04      3.29e-08\npolygon 688        13 1.46245e+04      2.83e-08\npolygon 689      1066 2.88894e+07      5.60e-05\npolygon 690        18 1.26335e+04      2.45e-08\npolygon 691       125 1.17609e+06      2.28e-06\npolygon 692       291 2.89175e+07      5.60e-05\npolygon 693        39 3.25381e+04      6.30e-08\npolygon 694        77 9.05555e+05      1.75e-06\npolygon 695       133 1.39549e+05      2.70e-07\npolygon 696        30 1.39928e+04      2.71e-08\npolygon 697        31 2.58780e+04      5.01e-08\npolygon 698        19 4.77690e+04      9.26e-08\npolygon 699        18 1.19413e+04      2.31e-08\npolygon 700        27 7.06965e+04      1.37e-07\npolygon 701        94 2.93367e+05      5.68e-07\npolygon 702       357 4.19642e+06      8.13e-06\npolygon 703        50 1.72523e+04      3.34e-08\npolygon 704         9 3.97401e+03      7.70e-09\npolygon 705        55 1.36144e+04      2.64e-08\npolygon 706       109 3.14625e+05      6.10e-07\npolygon 707        23 2.00716e+04      3.89e-08\npolygon 708       123 3.01503e+05      5.84e-07\npolygon 709        33 9.99966e+03      1.94e-08\npolygon 710        39 4.26341e+04      8.26e-08\npolygon 711        21 2.44897e+04      4.74e-08\npolygon 712        14 7.89863e+03      1.53e-08\npolygon 713        44 2.38081e+04      4.61e-08\npolygon 714        35 3.59738e+04      6.97e-08\npolygon 715        66 8.56579e+04      1.66e-07\npolygon 716        25 1.69954e+04      3.29e-08\npolygon 717        16 1.02405e+04      1.98e-08\npolygon 718        23 4.72763e+04      9.16e-08\npolygon 719        30 1.71468e+04      3.32e-08\npolygon 720       206 4.10359e+06      7.95e-06\npolygon 721        35 1.63422e+04      3.17e-08\npolygon 722        26 6.61320e+04      1.28e-07\npolygon 723        24 3.00670e+04      5.83e-08\npolygon 724        60 5.43431e+05      1.05e-06\npolygon 725        52 1.33290e+05      2.58e-07\npolygon 726        51 1.57518e+05      3.05e-07\npolygon 727        46 2.22838e+05      4.32e-07\npolygon 728    177339 5.13717e+11      9.95e-01\nenclosing rectangle: [325178.8, 1213655.7] x [620860.6, 2263241] units\n                     (888500 x 1642000 units)\nWindow area = 5.1612e+11 square units\nFraction of frame area: 0.354\n```\n\n\n:::\n:::\n\n\ncolnames was used to list all of the columns in the df.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(thaiadmin32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Shape_Leng\" \"Shape_Area\" \"ADM1_EN\"    \"ADM1_TH\"    \"ADM1_PCODE\"\n [6] \"ADM1_REF\"   \"ADM1ALT1EN\" \"ADM1ALT2EN\" \"ADM1ALT1TH\" \"ADM1ALT2TH\"\n[11] \"ADM0_EN\"    \"ADM0_TH\"    \"ADM0_PCODE\" \"date\"       \"validOn\"   \n[16] \"validTo\"    \"geometry\"   \"acc_code\"  \n```\n\n\n:::\n:::\n\n\n### ROADLINES DataFrame\n\nNoticed that the geometry type is in multi-line string, not suitable for maniuplation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_geometry(roadlines)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 2792590 features \nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nCRS:           NA\nFirst 5 geometries:\n```\n\n\n:::\n:::\n\n\n#### Changing Multi-Line String to Line String\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroadlines <- st_cast(roadlines, \"LINESTRING\")\n```\n:::\n\n\n*Head()* function allows to view the first 5 rows of the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(roadlines, n=5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 5 features and 14 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 100.7831 ymin: 13.73046 xmax: 100.7913 ymax: 13.74091\nCRS:           NA\n            name               name_en        highway  surface smoothness width\n1     ถนนฉลองกรุง    Chalong Krung Road      secondary    paved       <NA>  <NA>\n2 ซอยฉลองกรุง 1/1 Soi Chalong Krung 1/1    residential     <NA>       <NA>  <NA>\n3           <NA>                  <NA> secondary_link     <NA>       <NA>  <NA>\n4           <NA>                  <NA>        service     <NA>       <NA>  <NA>\n5     ถนนฉลองกรุง    Chalong Krung Road      secondary concrete       <NA>  <NA>\n  lanes oneway bridge layer source        name_th     osm_id  osm_type\n1  <NA>    yes   <NA>  <NA>   <NA>     ถนนฉลองกรุง 1125681229 ways_line\n2  <NA>   <NA>   <NA>  <NA>   <NA> ซอยฉลองกรุง 1/1  594401607 ways_line\n3  <NA>    yes   <NA>  <NA>   <NA>           <NA>  472283206 ways_line\n4  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  594401608 ways_line\n5     2    yes    yes     1   Bing     ถนนฉลองกรุง  116847248 ways_line\n                        geometry\n1 LINESTRING (100.7913 13.740...\n2 LINESTRING (100.7882 13.736...\n3 LINESTRING (100.7844 13.732...\n4 LINESTRING (100.7873 13.735...\n5 LINESTRING (100.7831 13.730...\n```\n\n\n:::\n:::\n\n\n### Combined SF\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroadlines <- st_set_crs(roadlines, 4326)\nroadlines_transformed <- st_transform(roadlines, crs = 32647)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_data <- st_join(roadlines_transformed, thaiadmin32647, join = st_intersects)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(merged_data, \"data/rds/merged_data.rds\")\n```\n:::\n\n\n\nEXTRACT ROADLINES UNDER BMR then put it accidents data to DR\n\nTASK 1:To visualize the spatio-temporal dynamics of road traffic accidents in BMR using appropriate statistical graphics and geovisualization methods.\n\n-   **Goal**: Create visuals to show how road accidents are distributed over space and time.\n\n-   **Methods**: Use statistical graphics and geovisualization techniques such as:\n\n    -   Heatmaps for spatial density of accidents.\n\n    -   Time series charts for accident trends over time.\n\n    -   Animated maps to show changes in accident locations over time (spatio-temporal dynamics).\n\nFrom this heatmap, we can see Bangkok notoriously topped the charts in the number of RTAs every year followed by Samut Prakan.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Extract the year from the date column\nrta_sf_mbr_split <- rta_sf_mbr_split %>%\n  mutate(year = year(date))  # Extract year using lubridate's year() function\n\n# Step 2: Summarize the data to count accidents per province and year\naccidents_summary <- rta_sf_mbr_split %>%\n  group_by(province_en, year) %>%\n  summarise(total_accidents = n(), .groups = \"drop\")\n\n# Step 3: Create the heatmap with number of accidents in each tile\nggplot(accidents_summary, aes(x = year, y = province_en, fill = total_accidents)) +\n  geom_tile(color = \"white\") +  # Use geom_tile to create the heatmap\n  geom_text(aes(label = total_accidents), color = \"black\", size = 3) +  # Add the number of accidents in each tile\n  scale_fill_gradient(low = \"lightblue\", high = \"red\", na.value = \"white\", name = \"Number of Accidents\") +\n  labs(title = \"Accident Heatmap by Province and Year\",\n       x = \"Year\",\n       y = \"Province\",\n       fill = \"Total Accidents\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability\n```\n\n::: {.cell-output-display}\n![](TakeHome1_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\nA heatmap segregated of months was populated below to gain a better understanding of the accidents in each month.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Extract the year and month name from the date column\nrta_sf_mbr_split <- rta_sf_mbr_split %>%\n  mutate(\n    year = year(date),                # Extract year\n    month = month(date, label = TRUE, abbr = FALSE)  # Extract full month name\n  )\n\n# Step 2: Summarize the data to count accidents per province, year, and month\naccidents_summary <- rta_sf_mbr_split %>%\n  group_by(province_en, year, month) %>%\n  summarise(total_accidents = n(), .groups = \"drop\")\n\n# Step 3: Create the heatmap\nggplot(accidents_summary, aes(x = month, y = province_en, fill = total_accidents)) +\n  geom_tile(color = \"white\") +  # Use geom_tile to create the heatmap\n  facet_wrap(~year, ncol = 1) +  # Separate the heatmap by year\n  scale_fill_gradient(low = \"lightblue\", high = \"red\", na.value = \"white\", name = \"Number of Accidents\") +\n  labs(title = \"Accident Heatmap by Province and Month\",\n       x = \"Month\",\n       y = \"Province\",\n       fill = \"Total Accidents\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability\n```\n\n::: {.cell-output-display}\n![](TakeHome1_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter to BMR\nprovinces_to_keep <- c(\"Nakhon Pathom\", \"Pathum Thani\", \"Nonthaburi\", \n                       \"Samut Prakan\", \"Samut Sakhon\", \"Bangkok\")\n\n# Filter the dataset for the 6 provinces\nrta_sf_mbr_filtered <- rta_sf_mbr_split %>%\n  filter(province_en %in% provinces_to_keep)\n\n# Group by date and province, then count the number of accidents per day for each province\naccident_trends_by_province <- rta_sf_mbr_filtered %>%\n  group_by(date = as.Date(date), province_en) %>%\n  summarise(daily_accidents = n(), .groups = \"drop\")\n\n# Plot the time series chart for each province\nggplot(data = accident_trends_by_province, aes(x = date, y = daily_accidents, color = province_en)) +\n  geom_line() +\n  labs(title = \"Time Series of Accident Trends by Province\",\n       x = \"Year\", y = \"Number of Accidents\") +\n  theme_minimal() +\n  facet_wrap(~ province_en, ncol = 2, scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](TakeHome1_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n**Observation**\n\nBased on a cursory view, it is apparent that Bangkok has the highest number of RTA from 2019 - 2023 and the numbers are relatively consistent and concentrated except in Q1 2019 & Q4 2023 when it spiked above 15 accidents. Conversely, Samut Sakhon has the lowest number of RTA where in end of 2022, there is close to 0 number of accidents. It is also worthwhile noting that Samut Prakan has an interesting outlook of the RTA data. At certain time frame, it had spikes that indicates that the number of RTA rose above 7 and Samut Prakan also have pockets of \"dead spots\" which tells us the number of accidents were close to 0.\n\n**Inference**\n\nBangkok is notably the most densely populated province in Thailand alongside the influx of tourists. This may explain the consistently high number of RTA in the province.\n\nAdditionally, Nonthaburi , too, have a high number of RTA, This may due to it being the 2nd most densely populated province ([Wiki](https://en.wikipedia.org/wiki/Nonthaburi_province)).\n\nAs Samut Sakhon is an industrial dominant and formerly an agriculture/fisheries producing province ([Wiki](https://en.wikipedia.org/wiki/Samut_Sakhon_province)), there might not be huge population of people residing or commuting around the province. Hence, it may be why Samut Sakhon has the lowest number of RTA between the 6 provinces of the MBR.\n\nTASK 2:To conduct detailed spatial analysis of road traffic accidents using appropriate Network Spatial Point Patterns Analysis methods.\n\n-   **Goal**: Analyze the spatial patterns of accidents using **Network Spatial Point Patterns Analysis** (NSPPA).\n\n-   **Methods**: NSPPA techniques to analyze how accidents are distributed along the road network. This involves:\n\n    -   Kernel density estimation (KDE) on the road network.\n\n    -   Nearest neighbor analysis to see clustering on road segments.\n\n    -   Network K-function or Ripley’s K-function to analyze the spatial distribution along the network.\n\n## Spatial Data Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\ntm_shape(rta_sf)+\n  tm_dots(alpha=0.4,\n          size=0.05)\n```\n\n::: {.cell-output-display}\n![](TakeHome1_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds('view', \"data/rds/view.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds('plot', \"data/rds/plot.rds\")\n```\n:::\n\n\n### Converting sf df to sp's Spatial\\* Class\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrta_sp <- as_Spatial(rta_sf_mbr_split)\nroadlines_sp <- as_Spatial(roadlines)\nthaiadmin_sp <- as_Spatial(thaiadmin32647)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds('rta_sp', \"data/rds/rta_sp.rds\")\nwrite_rds('roadlines_sp', \"data/rds/roadlines_sp.rds\")\nwrite_rds('thaiadmin_sp', \"data/rds/thaiadmin_sp.rds\")\n```\n:::\n\n\nConverting generic sp format into spatstat's ppp format\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrta_ppp <- as.ppp(rta_sf)\nrta_ppp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern: 81376 points\nmarks are numeric, of storage type  'double'\nwindow: rectangle = [-16183187, 1200243] x [-936, 4918525] units\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_rta <- density(rta_ppp,\n                   sigma=bw.diggle,\n                   edge=TRUE,\n                   kernel=\"gaussian\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(kde_rta)\n```\n\n::: {.cell-output-display}\n![](TakeHome1_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_rta_adaptive <- adaptive.density(rta_ppp, method=\"kernel\")\nplot(kde_rta_adaptive)\n```\n\n::: {.cell-output-display}\n![](TakeHome1_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\n\"Murphy's law will kick in during the very last minute\" (Kam, 2024).\n\nAnd I attest it was absolutely true.\n",
    "supporting": [
      "TakeHome1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}